{"ast":null,"code":"import _classCallCheck from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ahmadhesham/Desktop/reactdev/src/components/cards/InvestorCard.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SimpleMenu from \"../layout/menu/SimpleMenu\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport Done from \"@material-ui/icons/Done\";\nimport DoneAll from \"@material-ui/icons/DoneAll\";\nimport Error from \"@material-ui/icons/Warning\";\nimport HourGlass from \"@material-ui/icons/HourglassEmpty\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"../layout/popper/Popper\";\nimport { Hidden } from \"@material-ui/core\";\nvar styles = {\n  card: {\n    width: 290,\n    height: 160\n  },\n  cover: {\n    opacity: 0,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingLeft: 10,\n    backgroundColor: \"rgba(52, 52, 52, 0.4)\",\n    height: 100,\n    \"&:hover\": {\n      opacity: 1,\n      transition: \"0.3s\"\n    },\n    transition: \"0.3s\"\n  },\n  title: {\n    fontSize: 18,\n    height: 20,\n    fontWeight: \"bold\"\n  },\n  subheader: {\n    fontSize: 15\n  },\n  comment: {\n    fontSize: 15,\n    color: \"#1f1f1f\",\n    fontWeight: \"bold\"\n  },\n  lawyer: {\n    fontSize: 12,\n    color: \"#5f5f5f\",\n    fontWeight: \"bold\"\n  },\n  avatar: {\n    backgroundColor: blue[600],\n    \"&:hover\": {\n      transform: \"scale(1.3,1.3)\",\n      transition: \"0.3s\"\n    },\n    transition: \"0.3s\"\n  }\n};\n\nvar InvestorCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InvestorCard, _React$Component);\n\n  function InvestorCard(_props) {\n    var _this;\n\n    _classCallCheck(this, InvestorCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InvestorCard).call(this, _props));\n\n    _this.checkrejectedicon = function (props) {\n      if (props.subheader === \"Accepted\") return React.createElement(DoneAll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n      if (props.subheader === \"PendingReviewer\") return React.createElement(Done, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n      if (props.subheader === \"RejectedLawyer\" || props.subheader === \"RejectedReviewer\") return React.createElement(Error, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n      if (props.subheader === \"PendingLawyer\") return React.createElement(HourGlass, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    };\n\n    _this.checkrejs = function (props) {\n      if (props.subheader === \"RejectedLawyer\") return red[500];\n      if (props.subheader === \"Accepted\") return green[500];\n      if (props.subheader === \"RejectedReviewer\") return yellow[500];\n      if (props.subheader === \"PendingReviewer\" || props.subheader === \"PendingLawyer\") return blue[500];\n    };\n\n    _this.checkrej = function (props) {\n      if (props.subheader === \"RejectedLawyer\") {\n        return true;\n      } else return false;\n    };\n\n    _this.popper = function (props) {\n      return React.createElement(Popper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      expanded: false,\n      color: blue[500],\n      opacity: 0\n    };\n    return _this;\n  }\n\n  _createClass(InvestorCard, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        classes: {\n          title: classes.title,\n          subheader: classes.subheader\n        },\n        avatar: React.createElement(React.Fragment, null, \" \", React.createElement(IconButton, {\n          \"aria-label\": \"Request\",\n          style: {\n            backgroundColor: this.checkrejs(this.props)\n          },\n          title: this.props.subheader,\n          className: classes.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, this.checkrejectedicon(this.props))),\n        action: React.createElement(SimpleMenu, {\n          a: this.checkrej(this.props),\n          id: this.props.id,\n          token: this.props.token,\n          data: this.props.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }),\n        title: this.props.title // subheader={this.props.nameAr}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(CardMedia, {\n        className: classes.cover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.lawyer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.props.lawyer !== undefined ? \"- \" + this.props.lawyer : console.log)));\n    }\n  }]);\n\n  return InvestorCard;\n}(React.Component);\n\nInvestorCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(InvestorCard);","map":{"version":3,"sources":["/Users/ahmadhesham/Desktop/reactdev/src/components/cards/InvestorCard.js"],"names":["React","PropTypes","withStyles","Card","CardContent","CardMedia","CardHeader","Avatar","SimpleMenu","blue","red","green","yellow","Done","DoneAll","Error","HourGlass","Typography","IconButton","Popper","Hidden","styles","card","width","height","cover","opacity","marginTop","paddingTop","paddingLeft","backgroundColor","transition","title","fontSize","fontWeight","subheader","comment","color","lawyer","avatar","transform","InvestorCard","props","checkrejectedicon","checkrejs","checkrej","popper","state","expanded","classes","id","token","data","undefined","console","log","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport SimpleMenu from \"../layout/menu/SimpleMenu\"\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\nimport green from \"@material-ui/core/colors/green\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport Done from \"@material-ui/icons/Done\";\nimport DoneAll from \"@material-ui/icons/DoneAll\";\nimport Error from \"@material-ui/icons/Warning\";\nimport HourGlass from \"@material-ui/icons/HourglassEmpty\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"../layout/popper/Popper\";\nimport { Hidden } from \"@material-ui/core\";\nconst styles = {\n  card: {\n    width: 290,\n    height: 160\n  },\n  cover: {\n    opacity: 0,\n    marginTop: 10,\n    paddingTop: 10,\n    paddingLeft: 10,\n    backgroundColor: \"rgba(52, 52, 52, 0.4)\",\n    height: 100,\n    \"&:hover\": {\n      opacity: 1,\n      transition: \"0.3s\"\n    },\n    transition: \"0.3s\"\n  },\n\n  title: {\n    fontSize: 18,\n    height: 20,\n    fontWeight: \"bold\"\n  },\n  subheader: {\n    fontSize: 15\n  },\n  comment: {\n    fontSize: 15,\n    color: \"#1f1f1f\",\n    fontWeight: \"bold\"\n  },\n  lawyer: {\n    fontSize: 12,\n    color: \"#5f5f5f\",\n    fontWeight: \"bold\"\n  },\n\n  avatar: {\n    backgroundColor: blue[600],\n    \"&:hover\": {\n      transform: \"scale(1.3,1.3)\",\n      transition: \"0.3s\"\n    },\n    transition: \"0.3s\"\n  }\n};\nclass InvestorCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { expanded: false, color: blue[500], opacity: 0 };\n  }\n  checkrejectedicon = props => {\n    if (props.subheader === \"Accepted\") return <DoneAll />;\n    if (props.subheader === \"PendingReviewer\") return <Done />;\n    if (\n      props.subheader === \"RejectedLawyer\" ||\n      props.subheader === \"RejectedReviewer\"\n    )\n      return <Error />;\n    if (props.subheader === \"PendingLawyer\") return <HourGlass />;\n  };\n  checkrejs = props => {\n    if (props.subheader === \"RejectedLawyer\") return red[500];\n    if (props.subheader === \"Accepted\") return green[500];\n    if (props.subheader === \"RejectedReviewer\") return yellow[500];\n    if (\n      props.subheader === \"PendingReviewer\" ||\n      props.subheader === \"PendingLawyer\"\n    )\n      return blue[500];\n  };\n\n  checkrej = props => {\n    if (props.subheader === \"RejectedLawyer\") {\n      return true;\n    } else return false;\n  };\n  popper = props => {\n    return <Popper />;\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          classes={{\n            title: classes.title,\n            subheader: classes.subheader\n          }}\n          avatar={\n            <>\n              {\" \"}\n              <IconButton\n                aria-label=\"Request\"\n                style={{ backgroundColor: this.checkrejs(this.props) }}\n                title={this.props.subheader}\n                className={classes.avatar}\n              >\n                {this.checkrejectedicon(this.props)}\n              </IconButton>\n            </>\n          }\n          action={\n            <SimpleMenu\n              a={this.checkrej(this.props)}\n              id={this.props.id}\n              token={this.props.token}\n              data={this.props.data}\n            />\n          }\n          title={this.props.title}\n\n          // subheader={this.props.nameAr}\n        />\n\n        <CardMedia className={classes.cover}>\n          <Typography className={classes.lawyer}>\n            {this.props.lawyer !== undefined\n              ? \"- \" + this.props.lawyer\n              : console.log}\n          </Typography>\n        </CardMedia>\n      </Card>\n    );\n  }\n}\nInvestorCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(InvestorCard);\n"]},"metadata":{},"sourceType":"module"}