{"ast":null,"code":"import _toConsumableArray from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/ahmadhesham/Desktop/reactdev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ahmadhesham/Desktop/reactdev/src/components/layout/inputs/Country.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nvar suggestions = [{\n  label: \"Afghanistan\",\n  \"code\": \"AF\"\n}, {\n  label: \"Albania\",\n  \"code\": \"AL\"\n}, {\n  label: \"Algeria\",\n  \"code\": \"DZ\"\n}, {\n  label: \"American Samoa\",\n  \"code\": \"AS\"\n}, {\n  label: \"Andorra\",\n  \"code\": \"AD\"\n}, {\n  label: \"Angola\",\n  \"code\": \"AO\"\n}, {\n  label: \"Anguilla\",\n  \"code\": \"AI\"\n}, {\n  label: \"Antarctica\",\n  \"code\": \"AQ\"\n}, {\n  label: \"Antigua and Barbuda\",\n  \"code\": \"AG\"\n}, {\n  label: \"Argentina\",\n  \"code\": \"AR\"\n}, {\n  label: \"Armenia\",\n  \"code\": \"AM\"\n}, {\n  label: \"Aruba\",\n  \"code\": \"AW\"\n}, {\n  label: \"Australia\",\n  \"code\": \"AU\"\n}, {\n  label: \"Austria\",\n  \"code\": \"AT\"\n}, {\n  label: \"Azerbaijan\",\n  \"code\": \"AZ\"\n}, {\n  label: \"Bahamas\",\n  \"code\": \"BS\"\n}, {\n  label: \"Bahrain\",\n  \"code\": \"BH\"\n}, {\n  label: \"Bangladesh\",\n  \"code\": \"BD\"\n}, {\n  label: \"Barbados\",\n  \"code\": \"BB\"\n}, {\n  label: \"Belarus\",\n  \"code\": \"BY\"\n}, {\n  label: \"Belgium\",\n  \"code\": \"BE\"\n}, {\n  label: \"Belize\",\n  \"code\": \"BZ\"\n}, {\n  label: \"Benin\",\n  \"code\": \"BJ\"\n}, {\n  label: \"Bermuda\",\n  \"code\": \"BM\"\n}, {\n  label: \"Bhutan\",\n  \"code\": \"BT\"\n}, {\n  label: \"Bolivia\",\n  \"code\": \"BO\"\n}, {\n  label: \"Bosnia and Herzegovina\",\n  \"code\": \"BA\"\n}, {\n  label: \"Botswana\",\n  \"code\": \"BW\"\n}, {\n  label: \"Bouvet Island\",\n  \"code\": \"BV\"\n}, {\n  label: \"Brazil\",\n  \"code\": \"BR\"\n}, {\n  label: \"British Indian Ocean Territory\",\n  \"code\": \"IO\"\n}, {\n  label: \"Brunei Darussalam\",\n  \"code\": \"BN\"\n}, {\n  label: \"Bulgaria\",\n  \"code\": \"BG\"\n}, {\n  label: \"Burkina Faso\",\n  \"code\": \"BF\"\n}, {\n  label: \"Burundi\",\n  \"code\": \"BI\"\n}, {\n  label: \"Cambodia\",\n  \"code\": \"KH\"\n}, {\n  label: \"Cameroon\",\n  \"code\": \"CM\"\n}, {\n  label: \"Canada\",\n  \"code\": \"CA\"\n}, {\n  label: \"Cape Verde\",\n  \"code\": \"CV\"\n}, {\n  label: \"Cayman Islands\",\n  \"code\": \"KY\"\n}, {\n  label: \"Central African Republic\",\n  \"code\": \"CF\"\n}, {\n  label: \"Chad\",\n  \"code\": \"TD\"\n}, {\n  label: \"Chile\",\n  \"code\": \"CL\"\n}, {\n  label: \"China\",\n  \"code\": \"CN\"\n}, {\n  label: \"Christmas Island\",\n  \"code\": \"CX\"\n}, {\n  label: \"Cocos (Keeling) Islands\",\n  \"code\": \"CC\"\n}, {\n  label: \"Colombia\",\n  \"code\": \"CO\"\n}, {\n  label: \"Comoros\",\n  \"code\": \"KM\"\n}, {\n  label: \"Congo\",\n  \"code\": \"CG\"\n}, {\n  label: \"Congo, The Democratic Republic of the\",\n  \"code\": \"CD\"\n}, {\n  label: \"Cook Islands\",\n  \"code\": \"CK\"\n}, {\n  label: \"Costa Rica\",\n  \"code\": \"CR\"\n}, {\n  label: \"Cote D\\\"Ivoire\",\n  \"code\": \"CI\"\n}, {\n  label: \"Croatia\",\n  \"code\": \"HR\"\n}, {\n  label: \"Cuba\",\n  \"code\": \"CU\"\n}, {\n  label: \"Cyprus\",\n  \"code\": \"CY\"\n}, {\n  label: \"Czech Republic\",\n  \"code\": \"CZ\"\n}, {\n  label: \"Denmark\",\n  \"code\": \"DK\"\n}, {\n  label: \"Djibouti\",\n  \"code\": \"DJ\"\n}, {\n  label: \"Dominica\",\n  \"code\": \"DM\"\n}, {\n  label: \"Dominican Republic\",\n  \"code\": \"DO\"\n}, {\n  label: \"Ecuador\",\n  \"code\": \"EC\"\n}, {\n  label: \"Egypt\",\n  \"code\": \"EG\"\n}, {\n  label: \"El Salvador\",\n  \"code\": \"SV\"\n}, {\n  label: \"Equatorial Guinea\",\n  \"code\": \"GQ\"\n}, {\n  label: \"Eritrea\",\n  \"code\": \"ER\"\n}, {\n  label: \"Estonia\",\n  \"code\": \"EE\"\n}, {\n  label: \"Ethiopia\",\n  \"code\": \"ET\"\n}, {\n  label: \"Falkland Islands (Malvinas)\",\n  \"code\": \"FK\"\n}, {\n  label: \"Faroe Islands\",\n  \"code\": \"FO\"\n}, {\n  label: \"Fiji\",\n  \"code\": \"FJ\"\n}, {\n  label: \"Finland\",\n  \"code\": \"FI\"\n}, {\n  label: \"France\",\n  \"code\": \"FR\"\n}, {\n  label: \"French Guiana\",\n  \"code\": \"GF\"\n}, {\n  label: \"French Polynesia\",\n  \"code\": \"PF\"\n}, {\n  label: \"French Southern Territories\",\n  \"code\": \"TF\"\n}, {\n  label: \"Gabon\",\n  \"code\": \"GA\"\n}, {\n  label: \"Gambia\",\n  \"code\": \"GM\"\n}, {\n  label: \"Georgia\",\n  \"code\": \"GE\"\n}, {\n  label: \"Germany\",\n  \"code\": \"DE\"\n}, {\n  label: \"Ghana\",\n  \"code\": \"GH\"\n}, {\n  label: \"Gibraltar\",\n  \"code\": \"GI\"\n}, {\n  label: \"Greece\",\n  \"code\": \"GR\"\n}, {\n  label: \"Greenland\",\n  \"code\": \"GL\"\n}, {\n  label: \"Grenada\",\n  \"code\": \"GD\"\n}, {\n  label: \"Guadeloupe\",\n  \"code\": \"GP\"\n}, {\n  label: \"Guam\",\n  \"code\": \"GU\"\n}, {\n  label: \"Guatemala\",\n  \"code\": \"GT\"\n}, {\n  label: \"Guernsey\",\n  \"code\": \"GG\"\n}, {\n  label: \"Guinea\",\n  \"code\": \"GN\"\n}, {\n  label: \"Guinea-Bissau\",\n  \"code\": \"GW\"\n}, {\n  label: \"Guyana\",\n  \"code\": \"GY\"\n}, {\n  label: \"Haiti\",\n  \"code\": \"HT\"\n}, {\n  label: \"Heard Island and Mcdonald Islands\",\n  \"code\": \"HM\"\n}, {\n  label: \"Holy See (Vatican City State)\",\n  \"code\": \"VA\"\n}, {\n  label: \"Honduras\",\n  \"code\": \"HN\"\n}, {\n  label: \"Hong Kong\",\n  \"code\": \"HK\"\n}, {\n  label: \"Hungary\",\n  \"code\": \"HU\"\n}, {\n  label: \"Iceland\",\n  \"code\": \"IS\"\n}, {\n  label: \"India\",\n  \"code\": \"IN\"\n}, {\n  label: \"Indonesia\",\n  \"code\": \"ID\"\n}, {\n  label: \"Iran, Islamic Republic Of\",\n  \"code\": \"IR\"\n}, {\n  label: \"Iraq\",\n  \"code\": \"IQ\"\n}, {\n  label: \"Ireland\",\n  \"code\": \"IE\"\n}, {\n  label: \"Isle of Man\",\n  \"code\": \"IM\"\n}, {\n  label: \"Israel\",\n  \"code\": \"IL\"\n}, {\n  label: \"Italy\",\n  \"code\": \"IT\"\n}, {\n  label: \"Jamaica\",\n  \"code\": \"JM\"\n}, {\n  label: \"Japan\",\n  \"code\": \"JP\"\n}, {\n  label: \"Jersey\",\n  \"code\": \"JE\"\n}, {\n  label: \"Jordan\",\n  \"code\": \"JO\"\n}, {\n  label: \"Kazakhstan\",\n  \"code\": \"KZ\"\n}, {\n  label: \"Kenya\",\n  \"code\": \"KE\"\n}, {\n  label: \"Kiribati\",\n  \"code\": \"KI\"\n}, {\n  label: \"Korea, Democratic People\\\"S Republic of\",\n  \"code\": \"KP\"\n}, {\n  label: \"Korea, Republic of\",\n  \"code\": \"KR\"\n}, {\n  label: \"Kuwait\",\n  \"code\": \"KW\"\n}, {\n  label: \"Kyrgyzstan\",\n  \"code\": \"KG\"\n}, {\n  label: \"Lao People\\\"S Democratic Republic\",\n  \"code\": \"LA\"\n}, {\n  label: \"Latvia\",\n  \"code\": \"LV\"\n}, {\n  label: \"Lebanon\",\n  \"code\": \"LB\"\n}, {\n  label: \"Lesotho\",\n  \"code\": \"LS\"\n}, {\n  label: \"Liberia\",\n  \"code\": \"LR\"\n}, {\n  label: \"Libyan Arab Jamahiriya\",\n  \"code\": \"LY\"\n}, {\n  label: \"Liechtenstein\",\n  \"code\": \"LI\"\n}, {\n  label: \"Lithuania\",\n  \"code\": \"LT\"\n}, {\n  label: \"Luxembourg\",\n  \"code\": \"LU\"\n}, {\n  label: \"Macao\",\n  \"code\": \"MO\"\n}, {\n  label: \"Macedonia, The Former Yugoslav Republic of\",\n  \"code\": \"MK\"\n}, {\n  label: \"Madagascar\",\n  \"code\": \"MG\"\n}, {\n  label: \"Malawi\",\n  \"code\": \"MW\"\n}, {\n  label: \"Malaysia\",\n  \"code\": \"MY\"\n}, {\n  label: \"Maldives\",\n  \"code\": \"MV\"\n}, {\n  label: \"Mali\",\n  \"code\": \"ML\"\n}, {\n  label: \"Malta\",\n  \"code\": \"MT\"\n}, {\n  label: \"Marshall Islands\",\n  \"code\": \"MH\"\n}, {\n  label: \"Martinique\",\n  \"code\": \"MQ\"\n}, {\n  label: \"Mauritania\",\n  \"code\": \"MR\"\n}, {\n  label: \"Mauritius\",\n  \"code\": \"MU\"\n}, {\n  label: \"Mayotte\",\n  \"code\": \"YT\"\n}, {\n  label: \"Mexico\",\n  \"code\": \"MX\"\n}, {\n  label: \"Micronesia, Federated States of\",\n  \"code\": \"FM\"\n}, {\n  label: \"Moldova, Republic of\",\n  \"code\": \"MD\"\n}, {\n  label: \"Monaco\",\n  \"code\": \"MC\"\n}, {\n  label: \"Mongolia\",\n  \"code\": \"MN\"\n}, {\n  label: \"Montenegro\",\n  \"code\": \"ME\"\n}, {\n  label: \"Montserrat\",\n  \"code\": \"MS\"\n}, {\n  label: \"Morocco\",\n  \"code\": \"MA\"\n}, {\n  label: \"Mozambique\",\n  \"code\": \"MZ\"\n}, {\n  label: \"Myanmar\",\n  \"code\": \"MM\"\n}, {\n  label: \"Namibia\",\n  \"code\": \"NA\"\n}, {\n  label: \"Nauru\",\n  \"code\": \"NR\"\n}, {\n  label: \"Nepal\",\n  \"code\": \"NP\"\n}, {\n  label: \"Netherlands\",\n  \"code\": \"NL\"\n}, {\n  label: \"Netherlands Antilles\",\n  \"code\": \"AN\"\n}, {\n  label: \"New Caledonia\",\n  \"code\": \"NC\"\n}, {\n  label: \"New Zealand\",\n  \"code\": \"NZ\"\n}, {\n  label: \"Nicaragua\",\n  \"code\": \"NI\"\n}, {\n  label: \"Niger\",\n  \"code\": \"NE\"\n}, {\n  label: \"Nigeria\",\n  \"code\": \"NG\"\n}, {\n  label: \"Niue\",\n  \"code\": \"NU\"\n}, {\n  label: \"Norfolk Island\",\n  \"code\": \"NF\"\n}, {\n  label: \"Northern Mariana Islands\",\n  \"code\": \"MP\"\n}, {\n  label: \"Norway\",\n  \"code\": \"NO\"\n}, {\n  label: \"Oman\",\n  \"code\": \"OM\"\n}, {\n  label: \"Pakistan\",\n  \"code\": \"PK\"\n}, {\n  label: \"Palau\",\n  \"code\": \"PW\"\n}, {\n  label: \"Palestinian Territory\",\n  \"code\": \"PS\"\n}, {\n  label: \"Panama\",\n  \"code\": \"PA\"\n}, {\n  label: \"Papua New Guinea\",\n  \"code\": \"PG\"\n}, {\n  label: \"Paraguay\",\n  \"code\": \"PY\"\n}, {\n  label: \"Peru\",\n  \"code\": \"PE\"\n}, {\n  label: \"Philippines\",\n  \"code\": \"PH\"\n}, {\n  label: \"Pitcairn\",\n  \"code\": \"PN\"\n}, {\n  label: \"Poland\",\n  \"code\": \"PL\"\n}, {\n  label: \"Portugal\",\n  \"code\": \"PT\"\n}, {\n  label: \"Puerto Rico\",\n  \"code\": \"PR\"\n}, {\n  label: \"Qatar\",\n  \"code\": \"QA\"\n}, {\n  label: \"Reunion\",\n  \"code\": \"RE\"\n}, {\n  label: \"Romania\",\n  \"code\": \"RO\"\n}, {\n  label: \"Russian Federation\",\n  \"code\": \"RU\"\n}, {\n  label: \"RWANDA\",\n  \"code\": \"RW\"\n}, {\n  label: \"Saint Helena\",\n  \"code\": \"SH\"\n}, {\n  label: \"Saint Kitts and Nevis\",\n  \"code\": \"KN\"\n}, {\n  label: \"Saint Lucia\",\n  \"code\": \"LC\"\n}, {\n  label: \"Saint Pierre and Miquelon\",\n  \"code\": \"PM\"\n}, {\n  label: \"Saint Vincent and the Grenadines\",\n  \"code\": \"VC\"\n}, {\n  label: \"Samoa\",\n  \"code\": \"WS\"\n}, {\n  label: \"San Marino\",\n  \"code\": \"SM\"\n}, {\n  label: \"Sao Tome and Principe\",\n  \"code\": \"ST\"\n}, {\n  label: \"Saudi Arabia\",\n  \"code\": \"SA\"\n}, {\n  label: \"Senegal\",\n  \"code\": \"SN\"\n}, {\n  label: \"Serbia\",\n  \"code\": \"RS\"\n}, {\n  label: \"Seychelles\",\n  \"code\": \"SC\"\n}, {\n  label: \"Sierra Leone\",\n  \"code\": \"SL\"\n}, {\n  label: \"Singapore\",\n  \"code\": \"SG\"\n}, {\n  label: \"Slovakia\",\n  \"code\": \"SK\"\n}, {\n  label: \"Slovenia\",\n  \"code\": \"SI\"\n}, {\n  label: \"Solomon Islands\",\n  \"code\": \"SB\"\n}, {\n  label: \"Somalia\",\n  \"code\": \"SO\"\n}, {\n  label: \"South Africa\",\n  \"code\": \"ZA\"\n}, {\n  label: \"South Georgia and the South Sandwich Islands\",\n  \"code\": \"GS\"\n}, {\n  label: \"Spain\",\n  \"code\": \"ES\"\n}, {\n  label: \"Sri Lanka\",\n  \"code\": \"LK\"\n}, {\n  label: \"Sudan\",\n  \"code\": \"SD\"\n}, {\n  label: \"Suriname\",\n  \"code\": \"SR\"\n}, {\n  label: \"Svalbard and Jan Mayen\",\n  \"code\": \"SJ\"\n}, {\n  label: \"Swaziland\",\n  \"code\": \"SZ\"\n}, {\n  label: \"Sweden\",\n  \"code\": \"SE\"\n}, {\n  label: \"Switzerland\",\n  \"code\": \"CH\"\n}, {\n  label: \"Syrian Arab Republic\",\n  \"code\": \"SY\"\n}, {\n  label: \"Taiwan, Province of China\",\n  \"code\": \"TW\"\n}, {\n  label: \"Tajikistan\",\n  \"code\": \"TJ\"\n}, {\n  label: \"Tanzania, United Republic of\",\n  \"code\": \"TZ\"\n}, {\n  label: \"Thailand\",\n  \"code\": \"TH\"\n}, {\n  label: \"Timor-Leste\",\n  \"code\": \"TL\"\n}, {\n  label: \"Togo\",\n  \"code\": \"TG\"\n}, {\n  label: \"Tokelau\",\n  \"code\": \"TK\"\n}, {\n  label: \"Tonga\",\n  \"code\": \"TO\"\n}, {\n  label: \"Trinidad and Tobago\",\n  \"code\": \"TT\"\n}, {\n  label: \"Tunisia\",\n  \"code\": \"TN\"\n}, {\n  label: \"Turkey\",\n  \"code\": \"TR\"\n}, {\n  label: \"Turkmenistan\",\n  \"code\": \"TM\"\n}, {\n  label: \"Turks and Caicos Islands\",\n  \"code\": \"TC\"\n}, {\n  label: \"Tuvalu\",\n  \"code\": \"TV\"\n}, {\n  label: \"Uganda\",\n  \"code\": \"UG\"\n}, {\n  label: \"Ukraine\",\n  \"code\": \"UA\"\n}, {\n  label: \"United Arab Emirates\",\n  \"code\": \"AE\"\n}, {\n  label: \"United Kingdom\",\n  \"code\": \"GB\"\n}, {\n  label: \"United States\",\n  \"code\": \"US\"\n}, {\n  label: \"United States Minor Outlying Islands\",\n  \"code\": \"UM\"\n}, {\n  label: \"Uruguay\",\n  \"code\": \"UY\"\n}, {\n  label: \"Uzbekistan\",\n  \"code\": \"UZ\"\n}, {\n  label: \"Vanuatu\",\n  \"code\": \"VU\"\n}, {\n  label: \"Venezuela\",\n  \"code\": \"VE\"\n}, {\n  label: \"Viet Nam\",\n  \"code\": \"VN\"\n}, {\n  label: \"Virgin Islands, British\",\n  \"code\": \"VG\"\n}, {\n  label: \"Virgin Islands, U.S.\",\n  \"code\": \"VI\"\n}, {\n  label: \"Wallis and Futuna\",\n  \"code\": \"WF\"\n}, {\n  label: \"Western Sahara\",\n  \"code\": \"EH\"\n}, {\n  label: \"Yemen\",\n  \"code\": \"YE\"\n}, {\n  label: \"Zambia\",\n  \"code\": \"ZM\"\n}, {\n  label: \"Zimbabwe\",\n  \"code\": \"ZW\"\n}];\n\nfunction renderInput(inputProps) {\n  var InputProps = inputProps.InputProps,\n      classes = inputProps.classes,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"InputProps\", \"classes\", \"ref\"]);\n\n  return React.createElement(TextField, {\n    variant: \"outlined\",\n    InputProps: _objectSpread({\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      }\n    }, InputProps),\n    id: \"outlined-required\" //   label={this.props.field}\n    ,\n    className: classes.textField,\n    margin: \"normal\",\n    width: \"400\",\n    required: true,\n    name: \"country\",\n    onChange: inputProps.callBack //   type={this.props.type}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  });\n}\n\nfunction renderSuggestion(_ref) {\n  var suggestion = _ref.suggestion,\n      index = _ref.index,\n      itemProps = _ref.itemProps,\n      highlightedIndex = _ref.highlightedIndex,\n      selectedItem = _ref.selectedItem;\n  var isHighlighted = highlightedIndex === index;\n  var isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n  return React.createElement(MenuItem, Object.assign({}, itemProps, {\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400,\n      width: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }), suggestion.label);\n}\n\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({\n    label: PropTypes.string\n  }).isRequired,\n  width: 400\n};\n\nfunction getSuggestions(value) {\n  var inputValue = deburr(value.trim()).toLowerCase();\n  var inputLength = inputValue.length;\n  var count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(function (suggestion) {\n    var keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nvar DownshiftMultiple =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DownshiftMultiple, _React$Component);\n\n  function DownshiftMultiple() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DownshiftMultiple);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DownshiftMultiple)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputValue: '',\n      selectedItem: []\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _this$state = _this.state,\n          inputValue = _this$state.inputValue,\n          selectedItem = _this$state.selectedItem;\n\n      if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n        _this.setState({\n          selectedItem: selectedItem.slice(0, selectedItem.length - 1)\n        });\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    _this.handleChange = function (item) {\n      var selectedItem = _this.state.selectedItem;\n\n      if (selectedItem.indexOf(item) === -1) {\n        selectedItem = [].concat(_toConsumableArray(selectedItem), [item]);\n      }\n\n      _this.setState({\n        inputValue: '',\n        selectedItem: selectedItem\n      });\n    };\n\n    _this.handleDelete = function (item) {\n      return function () {\n        _this.setState(function (state) {\n          var selectedItem = _toConsumableArray(state.selectedItem);\n\n          selectedItem.splice(selectedItem.indexOf(item), 1);\n          return {\n            selectedItem: selectedItem\n          };\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(DownshiftMultiple, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state2 = this.state,\n          inputValue = _this$state2.inputValue,\n          selectedItem = _this$state2.selectedItem;\n      return React.createElement(Downshift, {\n        id: \"downshift-multiple\",\n        inputValue: inputValue,\n        onChange: this.handleChange,\n        selectedItem: selectedItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, function (_ref2) {\n        var getInputProps = _ref2.getInputProps,\n            getItemProps = _ref2.getItemProps,\n            isOpen = _ref2.isOpen,\n            inputValue2 = _ref2.inputValue,\n            selectedItem2 = _ref2.selectedItem,\n            highlightedIndex = _ref2.highlightedIndex;\n        return React.createElement(\"div\", {\n          className: classes.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, renderInput({\n          classes: classes,\n          InputProps: getInputProps({\n            startAdornment: selectedItem.map(function (item) {\n              return React.createElement(Chip, {\n                key: item,\n                tabIndex: -1,\n                label: item,\n                className: classes.chip,\n                onDelete: _this2.handleDelete(item),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 399\n                },\n                __self: this\n              });\n            }),\n            onChange: _this2.handleInputChange,\n            onKeyDown: _this2.handleKeyDown,\n            placeholder: 'Select multiple countries'\n          }),\n          label: 'Label'\n        }), isOpen ? React.createElement(Paper, {\n          className: classes.paper,\n          square: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }, getSuggestions(inputValue2).map(function (suggestion, index) {\n          return renderSuggestion({\n            suggestion: suggestion,\n            index: index,\n            itemProps: getItemProps({\n              item: suggestion.label\n            }),\n            highlightedIndex: highlightedIndex,\n            selectedItem: selectedItem2\n          });\n        })) : null);\n      });\n    }\n  }]);\n\n  return DownshiftMultiple;\n}(React.Component);\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      height: 250\n    },\n    container: {\n      flexGrow: 1,\n      position: 'relative',\n      flexWrap: 'wrap'\n    },\n    paper: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing.unit,\n      left: 0,\n      right: 0\n    },\n    chip: {\n      margin: \"\".concat(theme.spacing.unit / 2, \"px \").concat(theme.spacing.unit / 4, \"px\")\n    },\n    inputRoot: {\n      flexWrap: 'wrap'\n    },\n    inputInput: {\n      width: 'auto',\n      flexGrow: 1\n    },\n    divider: {\n      height: theme.spacing.unit * 2\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 400\n    }\n  };\n};\n\nvar popperNode;\n\nfunction Country(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }, React.createElement(Downshift, {\n    id: \"downshift-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, function (_ref3) {\n    var getInputProps = _ref3.getInputProps,\n        getItemProps = _ref3.getItemProps,\n        getMenuProps = _ref3.getMenuProps,\n        highlightedIndex = _ref3.highlightedIndex,\n        inputValue = _ref3.inputValue,\n        isOpen = _ref3.isOpen,\n        selectedItem = _ref3.selectedItem;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, renderInput({\n      classes: classes,\n      InputProps: getInputProps({\n        placeholder: 'Country of origin*'\n      })\n    }), React.createElement(\"div\", Object.assign({}, getMenuProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }), isOpen ? React.createElement(Paper, {\n      className: classes.paper,\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, getSuggestions(inputValue).map(function (suggestion, index) {\n      return renderSuggestion({\n        suggestion: suggestion,\n        index: index,\n        itemProps: getItemProps({\n          item: suggestion.label\n        }),\n        highlightedIndex: highlightedIndex,\n        selectedItem: selectedItem\n      });\n    })) : null));\n  }));\n}\n\nCountry.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Country);","map":{"version":3,"sources":["/Users/ahmadhesham/Desktop/reactdev/src/components/layout/inputs/Country.js"],"names":["React","PropTypes","deburr","Downshift","withStyles","TextField","Popper","Paper","MenuItem","Chip","suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","inputRef","root","inputRoot","input","inputInput","textField","callBack","renderSuggestion","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","indexOf","fontWeight","width","propTypes","number","object","string","shape","isRequired","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","DownshiftMultiple","state","handleKeyDown","event","key","setState","handleInputChange","target","handleChange","item","handleDelete","splice","props","getInputProps","getItemProps","isOpen","inputValue2","selectedItem2","container","startAdornment","map","chip","onChange","onKeyDown","placeholder","paper","Component","styles","theme","flexGrow","height","position","flexWrap","zIndex","marginTop","spacing","unit","left","right","margin","divider","marginLeft","marginRight","popperNode","Country","getMenuProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\n\nconst suggestions = \n[ \n{label: \"Afghanistan\", \"code\": \"AF\"}, \n{label: \"Albania\", \"code\": \"AL\"}, \n{label: \"Algeria\", \"code\": \"DZ\"}, \n{label: \"American Samoa\", \"code\": \"AS\"}, \n{label: \"Andorra\", \"code\": \"AD\"}, \n{label: \"Angola\", \"code\": \"AO\"}, \n{label: \"Anguilla\", \"code\": \"AI\"}, \n{label: \"Antarctica\", \"code\": \"AQ\"}, \n{label: \"Antigua and Barbuda\", \"code\": \"AG\"}, \n{label: \"Argentina\", \"code\": \"AR\"}, \n{label: \"Armenia\", \"code\": \"AM\"}, \n{label: \"Aruba\", \"code\": \"AW\"}, \n{label: \"Australia\", \"code\": \"AU\"}, \n{label: \"Austria\", \"code\": \"AT\"}, \n{label: \"Azerbaijan\", \"code\": \"AZ\"}, \n{label: \"Bahamas\", \"code\": \"BS\"}, \n{label: \"Bahrain\", \"code\": \"BH\"}, \n{label: \"Bangladesh\", \"code\": \"BD\"}, \n{label: \"Barbados\", \"code\": \"BB\"}, \n{label: \"Belarus\", \"code\": \"BY\"}, \n{label: \"Belgium\", \"code\": \"BE\"}, \n{label: \"Belize\", \"code\": \"BZ\"}, \n{label: \"Benin\", \"code\": \"BJ\"}, \n{label: \"Bermuda\", \"code\": \"BM\"}, \n{label: \"Bhutan\", \"code\": \"BT\"}, \n{label: \"Bolivia\", \"code\": \"BO\"}, \n{label: \"Bosnia and Herzegovina\", \"code\": \"BA\"}, \n{label: \"Botswana\", \"code\": \"BW\"}, \n{label: \"Bouvet Island\", \"code\": \"BV\"}, \n{label: \"Brazil\", \"code\": \"BR\"}, \n{label: \"British Indian Ocean Territory\", \"code\": \"IO\"}, \n{label: \"Brunei Darussalam\", \"code\": \"BN\"}, \n{label: \"Bulgaria\", \"code\": \"BG\"}, \n{label: \"Burkina Faso\", \"code\": \"BF\"}, \n{label: \"Burundi\", \"code\": \"BI\"}, \n{label: \"Cambodia\", \"code\": \"KH\"}, \n{label: \"Cameroon\", \"code\": \"CM\"}, \n{label: \"Canada\", \"code\": \"CA\"}, \n{label: \"Cape Verde\", \"code\": \"CV\"}, \n{label: \"Cayman Islands\", \"code\": \"KY\"}, \n{label: \"Central African Republic\", \"code\": \"CF\"}, \n{label: \"Chad\", \"code\": \"TD\"}, \n{label: \"Chile\", \"code\": \"CL\"}, \n{label: \"China\", \"code\": \"CN\"}, \n{label: \"Christmas Island\", \"code\": \"CX\"}, \n{label: \"Cocos (Keeling) Islands\", \"code\": \"CC\"}, \n{label: \"Colombia\", \"code\": \"CO\"}, \n{label: \"Comoros\", \"code\": \"KM\"}, \n{label: \"Congo\", \"code\": \"CG\"}, \n{label: \"Congo, The Democratic Republic of the\", \"code\": \"CD\"}, \n{label: \"Cook Islands\", \"code\": \"CK\"}, \n{label: \"Costa Rica\", \"code\": \"CR\"}, \n{label: \"Cote D\\\"Ivoire\", \"code\": \"CI\"}, \n{label: \"Croatia\", \"code\": \"HR\"}, \n{label: \"Cuba\", \"code\": \"CU\"}, \n{label: \"Cyprus\", \"code\": \"CY\"}, \n{label: \"Czech Republic\", \"code\": \"CZ\"}, \n{label: \"Denmark\", \"code\": \"DK\"}, \n{label: \"Djibouti\", \"code\": \"DJ\"}, \n{label: \"Dominica\", \"code\": \"DM\"}, \n{label: \"Dominican Republic\", \"code\": \"DO\"}, \n{label: \"Ecuador\", \"code\": \"EC\"}, \n{label: \"Egypt\", \"code\": \"EG\"}, \n{label: \"El Salvador\", \"code\": \"SV\"}, \n{label: \"Equatorial Guinea\", \"code\": \"GQ\"}, \n{label: \"Eritrea\", \"code\": \"ER\"}, \n{label: \"Estonia\", \"code\": \"EE\"}, \n{label: \"Ethiopia\", \"code\": \"ET\"}, \n{label: \"Falkland Islands (Malvinas)\", \"code\": \"FK\"}, \n{label: \"Faroe Islands\", \"code\": \"FO\"}, \n{label: \"Fiji\", \"code\": \"FJ\"}, \n{label: \"Finland\", \"code\": \"FI\"}, \n{label: \"France\", \"code\": \"FR\"}, \n{label: \"French Guiana\", \"code\": \"GF\"}, \n{label: \"French Polynesia\", \"code\": \"PF\"}, \n{label: \"French Southern Territories\", \"code\": \"TF\"}, \n{label: \"Gabon\", \"code\": \"GA\"}, \n{label: \"Gambia\", \"code\": \"GM\"}, \n{label: \"Georgia\", \"code\": \"GE\"}, \n{label: \"Germany\", \"code\": \"DE\"}, \n{label: \"Ghana\", \"code\": \"GH\"}, \n{label: \"Gibraltar\", \"code\": \"GI\"}, \n{label: \"Greece\", \"code\": \"GR\"}, \n{label: \"Greenland\", \"code\": \"GL\"}, \n{label: \"Grenada\", \"code\": \"GD\"}, \n{label: \"Guadeloupe\", \"code\": \"GP\"}, \n{label: \"Guam\", \"code\": \"GU\"}, \n{label: \"Guatemala\", \"code\": \"GT\"}, \n{label: \"Guernsey\", \"code\": \"GG\"}, \n{label: \"Guinea\", \"code\": \"GN\"}, \n{label: \"Guinea-Bissau\", \"code\": \"GW\"}, \n{label: \"Guyana\", \"code\": \"GY\"}, \n{label: \"Haiti\", \"code\": \"HT\"}, \n{label: \"Heard Island and Mcdonald Islands\", \"code\": \"HM\"}, \n{label: \"Holy See (Vatican City State)\", \"code\": \"VA\"}, \n{label: \"Honduras\", \"code\": \"HN\"}, \n{label: \"Hong Kong\", \"code\": \"HK\"}, \n{label: \"Hungary\", \"code\": \"HU\"}, \n{label: \"Iceland\", \"code\": \"IS\"}, \n{label: \"India\", \"code\": \"IN\"}, \n{label: \"Indonesia\", \"code\": \"ID\"}, \n{label: \"Iran, Islamic Republic Of\", \"code\": \"IR\"}, \n{label: \"Iraq\", \"code\": \"IQ\"}, \n{label: \"Ireland\", \"code\": \"IE\"}, \n{label: \"Isle of Man\", \"code\": \"IM\"}, \n{label: \"Israel\", \"code\": \"IL\"}, \n{label: \"Italy\", \"code\": \"IT\"}, \n{label: \"Jamaica\", \"code\": \"JM\"}, \n{label: \"Japan\", \"code\": \"JP\"}, \n{label: \"Jersey\", \"code\": \"JE\"}, \n{label: \"Jordan\", \"code\": \"JO\"}, \n{label: \"Kazakhstan\", \"code\": \"KZ\"}, \n{label: \"Kenya\", \"code\": \"KE\"}, \n{label: \"Kiribati\", \"code\": \"KI\"}, \n{label: \"Korea, Democratic People\\\"S Republic of\", \"code\": \"KP\"}, \n{label: \"Korea, Republic of\", \"code\": \"KR\"}, \n{label: \"Kuwait\", \"code\": \"KW\"}, \n{label: \"Kyrgyzstan\", \"code\": \"KG\"}, \n{label: \"Lao People\\\"S Democratic Republic\", \"code\": \"LA\"}, \n{label: \"Latvia\", \"code\": \"LV\"}, \n{label: \"Lebanon\", \"code\": \"LB\"}, \n{label: \"Lesotho\", \"code\": \"LS\"}, \n{label: \"Liberia\", \"code\": \"LR\"}, \n{label: \"Libyan Arab Jamahiriya\", \"code\": \"LY\"}, \n{label: \"Liechtenstein\", \"code\": \"LI\"}, \n{label: \"Lithuania\", \"code\": \"LT\"}, \n{label: \"Luxembourg\", \"code\": \"LU\"}, \n{label: \"Macao\", \"code\": \"MO\"}, \n{label: \"Macedonia, The Former Yugoslav Republic of\", \"code\": \"MK\"}, \n{label: \"Madagascar\", \"code\": \"MG\"}, \n{label: \"Malawi\", \"code\": \"MW\"}, \n{label: \"Malaysia\", \"code\": \"MY\"}, \n{label: \"Maldives\", \"code\": \"MV\"}, \n{label: \"Mali\", \"code\": \"ML\"}, \n{label: \"Malta\", \"code\": \"MT\"}, \n{label: \"Marshall Islands\", \"code\": \"MH\"}, \n{label: \"Martinique\", \"code\": \"MQ\"}, \n{label: \"Mauritania\", \"code\": \"MR\"}, \n{label: \"Mauritius\", \"code\": \"MU\"}, \n{label: \"Mayotte\", \"code\": \"YT\"}, \n{label: \"Mexico\", \"code\": \"MX\"}, \n{label: \"Micronesia, Federated States of\", \"code\": \"FM\"}, \n{label: \"Moldova, Republic of\", \"code\": \"MD\"}, \n{label: \"Monaco\", \"code\": \"MC\"}, \n{label: \"Mongolia\", \"code\": \"MN\"}, \n{label: \"Montenegro\", \"code\": \"ME\"},\n{label: \"Montserrat\", \"code\": \"MS\"},\n{label: \"Morocco\", \"code\": \"MA\"}, \n{label: \"Mozambique\", \"code\": \"MZ\"}, \n{label: \"Myanmar\", \"code\": \"MM\"}, \n{label: \"Namibia\", \"code\": \"NA\"}, \n{label: \"Nauru\", \"code\": \"NR\"}, \n{label: \"Nepal\", \"code\": \"NP\"}, \n{label: \"Netherlands\", \"code\": \"NL\"}, \n{label: \"Netherlands Antilles\", \"code\": \"AN\"}, \n{label: \"New Caledonia\", \"code\": \"NC\"}, \n{label: \"New Zealand\", \"code\": \"NZ\"}, \n{label: \"Nicaragua\", \"code\": \"NI\"}, \n{label: \"Niger\", \"code\": \"NE\"}, \n{label: \"Nigeria\", \"code\": \"NG\"}, \n{label: \"Niue\", \"code\": \"NU\"}, \n{label: \"Norfolk Island\", \"code\": \"NF\"}, \n{label: \"Northern Mariana Islands\", \"code\": \"MP\"}, \n{label: \"Norway\", \"code\": \"NO\"}, \n{label: \"Oman\", \"code\": \"OM\"}, \n{label: \"Pakistan\", \"code\": \"PK\"}, \n{label: \"Palau\", \"code\": \"PW\"}, \n{label: \"Palestinian Territory\", \"code\": \"PS\"}, \n{label: \"Panama\", \"code\": \"PA\"}, \n{label: \"Papua New Guinea\", \"code\": \"PG\"}, \n{label: \"Paraguay\", \"code\": \"PY\"}, \n{label: \"Peru\", \"code\": \"PE\"}, \n{label: \"Philippines\", \"code\": \"PH\"}, \n{label: \"Pitcairn\", \"code\": \"PN\"}, \n{label: \"Poland\", \"code\": \"PL\"}, \n{label: \"Portugal\", \"code\": \"PT\"}, \n{label: \"Puerto Rico\", \"code\": \"PR\"}, \n{label: \"Qatar\", \"code\": \"QA\"}, \n{label: \"Reunion\", \"code\": \"RE\"}, \n{label: \"Romania\", \"code\": \"RO\"}, \n{label: \"Russian Federation\", \"code\": \"RU\"}, \n{label: \"RWANDA\", \"code\": \"RW\"}, \n{label: \"Saint Helena\", \"code\": \"SH\"}, \n{label: \"Saint Kitts and Nevis\", \"code\": \"KN\"}, \n{label: \"Saint Lucia\", \"code\": \"LC\"}, \n{label: \"Saint Pierre and Miquelon\", \"code\": \"PM\"}, \n{label: \"Saint Vincent and the Grenadines\", \"code\": \"VC\"}, \n{label: \"Samoa\", \"code\": \"WS\"}, \n{label: \"San Marino\", \"code\": \"SM\"}, \n{label: \"Sao Tome and Principe\", \"code\": \"ST\"}, \n{label: \"Saudi Arabia\", \"code\": \"SA\"}, \n{label: \"Senegal\", \"code\": \"SN\"}, \n{label: \"Serbia\", \"code\": \"RS\"}, \n{label: \"Seychelles\", \"code\": \"SC\"}, \n{label: \"Sierra Leone\", \"code\": \"SL\"}, \n{label: \"Singapore\", \"code\": \"SG\"}, \n{label: \"Slovakia\", \"code\": \"SK\"}, \n{label: \"Slovenia\", \"code\": \"SI\"}, \n{label: \"Solomon Islands\", \"code\": \"SB\"}, \n{label: \"Somalia\", \"code\": \"SO\"}, \n{label: \"South Africa\", \"code\": \"ZA\"}, \n{label: \"South Georgia and the South Sandwich Islands\", \"code\": \"GS\"}, \n{label: \"Spain\", \"code\": \"ES\"}, \n{label: \"Sri Lanka\", \"code\": \"LK\"}, \n{label: \"Sudan\", \"code\": \"SD\"}, \n{label: \"Suriname\", \"code\": \"SR\"}, \n{label: \"Svalbard and Jan Mayen\", \"code\": \"SJ\"}, \n{label: \"Swaziland\", \"code\": \"SZ\"}, \n{label: \"Sweden\", \"code\": \"SE\"}, \n{label: \"Switzerland\", \"code\": \"CH\"}, \n{label: \"Syrian Arab Republic\", \"code\": \"SY\"}, \n{label: \"Taiwan, Province of China\", \"code\": \"TW\"}, \n{label: \"Tajikistan\", \"code\": \"TJ\"}, \n{label: \"Tanzania, United Republic of\", \"code\": \"TZ\"}, \n{label: \"Thailand\", \"code\": \"TH\"}, \n{label: \"Timor-Leste\", \"code\": \"TL\"}, \n{label: \"Togo\", \"code\": \"TG\"}, \n{label: \"Tokelau\", \"code\": \"TK\"}, \n{label: \"Tonga\", \"code\": \"TO\"}, \n{label: \"Trinidad and Tobago\", \"code\": \"TT\"}, \n{label: \"Tunisia\", \"code\": \"TN\"}, \n{label: \"Turkey\", \"code\": \"TR\"}, \n{label: \"Turkmenistan\", \"code\": \"TM\"}, \n{label: \"Turks and Caicos Islands\", \"code\": \"TC\"}, \n{label: \"Tuvalu\", \"code\": \"TV\"}, \n{label: \"Uganda\", \"code\": \"UG\"}, \n{label: \"Ukraine\", \"code\": \"UA\"}, \n{label: \"United Arab Emirates\", \"code\": \"AE\"}, \n{label: \"United Kingdom\", \"code\": \"GB\"}, \n{label: \"United States\", \"code\": \"US\"}, \n{label: \"United States Minor Outlying Islands\", \"code\": \"UM\"}, \n{label: \"Uruguay\", \"code\": \"UY\"}, \n{label: \"Uzbekistan\", \"code\": \"UZ\"}, \n{label: \"Vanuatu\", \"code\": \"VU\"}, \n{label: \"Venezuela\", \"code\": \"VE\"}, \n{label: \"Viet Nam\", \"code\": \"VN\"}, \n{label: \"Virgin Islands, British\", \"code\": \"VG\"}, \n{label: \"Virgin Islands, U.S.\", \"code\": \"VI\"}, \n{label: \"Wallis and Futuna\", \"code\": \"WF\"}, \n{label: \"Western Sahara\", \"code\": \"EH\"}, \n{label: \"Yemen\", \"code\": \"YE\"}, \n{label: \"Zambia\", \"code\": \"ZM\"}, \n{label: \"Zimbabwe\", \"code\": \"ZW\"} \n];\n\nfunction renderInput(inputProps) {\n  const { InputProps, classes, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n    variant=\"outlined\"\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...InputProps,\n      }}\n      id=\"outlined-required\"\n   //   label={this.props.field}\n      className={classes.textField}\n      margin=\"normal\"\n      width= \"400\"\n      required\n      name=\"country\"\n      onChange={inputProps.callBack}\n   //   type={this.props.type}\n \n    />\n  );\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400,\n        width:400\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n  width:400\n};\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nclass DownshiftMultiple extends React.Component {\n  state = {\n    inputValue: '',\n    selectedItem: [],\n  };\n\n  handleKeyDown = event => {\n    const { inputValue, selectedItem } = this.state;\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n      this.setState({\n        selectedItem: selectedItem.slice(0, selectedItem.length - 1),\n      });\n    }\n  };\n\n  handleInputChange = event => {\n    this.setState({ inputValue: event.target.value });\n  };\n\n  handleChange = item => {\n    let { selectedItem } = this.state;\n\n    if (selectedItem.indexOf(item) === -1) {\n      selectedItem = [...selectedItem, item];\n    }\n\n    this.setState({\n      inputValue: '',\n      selectedItem,\n    });\n  };\n\n  handleDelete = item => () => {\n    this.setState(state => {\n      const selectedItem = [...state.selectedItem];\n      selectedItem.splice(selectedItem.indexOf(item), 1);\n      return { selectedItem };\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { inputValue, selectedItem } = this.state;\n\n    return (\n      <Downshift\n        id=\"downshift-multiple\"\n        inputValue={inputValue}\n        onChange={this.handleChange}\n        selectedItem={selectedItem}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          inputValue: inputValue2,\n          selectedItem: selectedItem2,\n          highlightedIndex,\n        }) => (\n          <div className={classes.container}>\n            {renderInput({\n              classes,\n              InputProps: getInputProps({\n                startAdornment: selectedItem.map(item => (\n                  <Chip\n                    key={item}\n                    tabIndex={-1}\n                    label={item}\n                    className={classes.chip}\n                    onDelete={this.handleDelete(item)}\n                  />\n                )),\n                onChange: this.handleInputChange,\n                onKeyDown: this.handleKeyDown,\n                placeholder: 'Select multiple countries',\n              }),\n              label: 'Label',\n            })}\n            {isOpen ? (\n              <Paper className={classes.paper} square>\n                {getSuggestions(inputValue2).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem: selectedItem2,\n                  }),\n                )}\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n      flexWrap: 'wrap',\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n  },\n  inputRoot: {\n    flexWrap: 'wrap',\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1,\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400\n  },\n});\n\nlet popperNode;\n\nfunction Country(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <Downshift id=\"downshift-simple\">\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            {renderInput({\n              classes,\n              InputProps: getInputProps({\n                placeholder: 'Country of origin*',\n              }),\n            })}\n            <div {...getMenuProps()}>\n              {isOpen ? (\n                <Paper className={classes.paper} square>\n                  {getSuggestions(inputValue).map((suggestion, index) =>\n                    renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({ item: suggestion.label }),\n                      highlightedIndex,\n                      selectedItem,\n                    }),\n                  )}\n                </Paper>\n              ) : null}\n            </div>\n          </div>\n        )}\n      </Downshift>\n \n    </div>\n  );\n}\n\nCountry.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Country);\n"]},"metadata":{},"sourceType":"module"}